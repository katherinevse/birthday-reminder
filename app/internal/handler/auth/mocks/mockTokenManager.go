// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go

// Package mock_auth is a generated GoMock package.
package mock_auth

import (
	auth "birthdayReminder/app/internal/handler/auth"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenManager is a mock of TokenManager interface.
type MockTokenManager struct {
	ctrl     *gomock.Controller
	recorder *MockTokenManagerMockRecorder
}

// MockTokenManagerMockRecorder is the mock recorder for MockTokenManager.
type MockTokenManagerMockRecorder struct {
	mock *MockTokenManager
}

// NewMockTokenManager creates a new mock instance.
func NewMockTokenManager(ctrl *gomock.Controller) *MockTokenManager {
	mock := &MockTokenManager{ctrl: ctrl}
	mock.recorder = &MockTokenManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenManager) EXPECT() *MockTokenManagerMockRecorder {
	return m.recorder
}

// GenerateJWT mocks base method.
func (m *MockTokenManager) GenerateJWT(userID int, secretKey string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateJWT", userID, secretKey)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateJWT indicates an expected call of GenerateJWT.
func (mr *MockTokenManagerMockRecorder) GenerateJWT(userID, secretKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateJWT", reflect.TypeOf((*MockTokenManager)(nil).GenerateJWT), userID, secretKey)
}

// ParseJWT mocks base method.
func (m *MockTokenManager) ParseJWT(tokenStr, secretKey string) (*auth.Claims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseJWT", tokenStr, secretKey)
	ret0, _ := ret[0].(*auth.Claims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseJWT indicates an expected call of ParseJWT.
func (mr *MockTokenManagerMockRecorder) ParseJWT(tokenStr, secretKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseJWT", reflect.TypeOf((*MockTokenManager)(nil).ParseJWT), tokenStr, secretKey)
}
