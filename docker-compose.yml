version: '3.8'

networks:
  birthday_net:
    driver: bridge

services:
  db:
    image: postgres:alpine3.18
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./app/db/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    container_name: birthday_db
    networks:
      - birthday_net

  app:
    container_name: birthday_app
    build:
      context: .
      dockerfile: app/Dockerfile
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      SERVER_PORT: ${SERVER_PORT}
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - birthday_net
